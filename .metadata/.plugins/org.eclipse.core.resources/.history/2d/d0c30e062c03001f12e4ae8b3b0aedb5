package com.microservice.userservice.service.impl;

import java.util.ArrayList;
import java.util.List;
import java.util.UUID;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.web.client.RestTemplate;

import com.microservice.userservice.entity.Rating;
import com.microservice.userservice.entity.User;
import com.microservice.userservice.exception.ResourceNotFoundException;
import com.microservice.userservice.repository.UserRepository;
import com.microservice.userservice.service.UserService;

@Service
public class UserServiceImpl implements UserService{
	
	@Autowired
	UserRepository userRepository;
	
	@Autowired
	RestTemplate restTemplate;

	@Override
	public User createUser(User user) {
		String userId = UUID.randomUUID().toString();
		user.setUserId(userId);
		return userRepository.save(user);
	}

	@Override
	public User getUser(String userId) {
	 User user =userRepository.findById(userId)
		.orElseThrow(() -> new ResourceNotFoundException("User not found with given id"));
	 String url = "http://localhost:8083/ratings/users/117c48e3-8da6-4a29-93f4-89669ac71927";
	 ArrayList<Rating> ratingsOfUser = restTemplate.getForObject(url, ArrayList.class);
	 user.setRatings(ratingsOfUser);
	
	return user;
		
	}

	@Override
	public List<User> getAllUser() {
		return userRepository.findAll();
	}

	@Override
	public User updateUser(User user, String userId) {
		User userFound = this.getUser(userId);
		userFound.setName(user.getName());
		userFound.setEmail(user.getEmail());
		userFound.setAbout(user.getAbout());
		return userRepository.save(userFound);
		
	}

}
